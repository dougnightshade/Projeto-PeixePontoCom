package model.bean;
// Generated 23/10/2016 17:38:25 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * TipoFuncionario generated by hbm2java
 */
@Entity
@Table(name="tipo_funcionario"
    ,catalog="peixepontocom"
)
public class TipoFuncionario  implements java.io.Serializable {


     private Integer tipoFuncionarioCodigo;
     private String tipoFuncionarioDescricao;
     private Set funcionarios = new HashSet(0);

    public TipoFuncionario() {
    }

	
    public TipoFuncionario(String tipoFuncionarioDescricao) {
        this.tipoFuncionarioDescricao = tipoFuncionarioDescricao;
    }
    public TipoFuncionario(String tipoFuncionarioDescricao, Set funcionarios) {
       this.tipoFuncionarioDescricao = tipoFuncionarioDescricao;
       this.funcionarios = funcionarios;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="tipo_Funcionario_Codigo", unique=true, nullable=false)
    public Integer getTipoFuncionarioCodigo() {
        return this.tipoFuncionarioCodigo;
    }
    
    public void setTipoFuncionarioCodigo(Integer tipoFuncionarioCodigo) {
        this.tipoFuncionarioCodigo = tipoFuncionarioCodigo;
    }

    
    @Column(name="tipo_Funcionario_Descricao", nullable=false, length=45)
    public String getTipoFuncionarioDescricao() {
        return this.tipoFuncionarioDescricao;
    }
    
    public void setTipoFuncionarioDescricao(String tipoFuncionarioDescricao) {
        this.tipoFuncionarioDescricao = tipoFuncionarioDescricao;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="tipoFuncionario")
    public Set getFuncionarios() {
        return this.funcionarios;
    }
    
    public void setFuncionarios(Set funcionarios) {
        this.funcionarios = funcionarios;
    }




}


