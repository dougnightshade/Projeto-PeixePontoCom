package model.bean;
// Generated 23/10/2016 17:38:25 by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * BiometriaPeixeItem generated by hbm2java
 */
@Entity
@Table(name="biometria_peixe_item"
    ,catalog="peixepontocom"
)
public class BiometriaPeixeItem  implements java.io.Serializable {


     private Integer biometriaPeixeItemCodigo;
     private Funcionario funcionario;
     private RegistraLotedepeixe registraLotedepeixe;
     private TaxaDeAlimentacao taxaDeAlimentacao;
     private BigDecimal biometriaPeixeItemTotalDeQuilos;
     private double biometriaPeixeItemQtdAmostra;
     private int biometriaPeixeItemNumeroEtapa;
     private Date biometriaPeixeItemDataDeRegistro;
     private boolean biometriaPeixeItemAtivo;
     private BigDecimal biometriaPeixeItemTaxaArracoamento;
     private Set alimentas = new HashSet(0);

    public BiometriaPeixeItem() {
    }

	
    public BiometriaPeixeItem(Funcionario funcionario, RegistraLotedepeixe registraLotedepeixe, TaxaDeAlimentacao taxaDeAlimentacao, BigDecimal biometriaPeixeItemTotalDeQuilos, double biometriaPeixeItemQtdAmostra, int biometriaPeixeItemNumeroEtapa, Date biometriaPeixeItemDataDeRegistro, boolean biometriaPeixeItemAtivo, BigDecimal biometriaPeixeItemTaxaArracoamento) {
        this.funcionario = funcionario;
        this.registraLotedepeixe = registraLotedepeixe;
        this.taxaDeAlimentacao = taxaDeAlimentacao;
        this.biometriaPeixeItemTotalDeQuilos = biometriaPeixeItemTotalDeQuilos;
        this.biometriaPeixeItemQtdAmostra = biometriaPeixeItemQtdAmostra;
        this.biometriaPeixeItemNumeroEtapa = biometriaPeixeItemNumeroEtapa;
        this.biometriaPeixeItemDataDeRegistro = biometriaPeixeItemDataDeRegistro;
        this.biometriaPeixeItemAtivo = biometriaPeixeItemAtivo;
        this.biometriaPeixeItemTaxaArracoamento = biometriaPeixeItemTaxaArracoamento;
    }
    public BiometriaPeixeItem(Funcionario funcionario, RegistraLotedepeixe registraLotedepeixe, TaxaDeAlimentacao taxaDeAlimentacao, BigDecimal biometriaPeixeItemTotalDeQuilos, double biometriaPeixeItemQtdAmostra, int biometriaPeixeItemNumeroEtapa, Date biometriaPeixeItemDataDeRegistro, boolean biometriaPeixeItemAtivo, BigDecimal biometriaPeixeItemTaxaArracoamento, Set alimentas) {
       this.funcionario = funcionario;
       this.registraLotedepeixe = registraLotedepeixe;
       this.taxaDeAlimentacao = taxaDeAlimentacao;
       this.biometriaPeixeItemTotalDeQuilos = biometriaPeixeItemTotalDeQuilos;
       this.biometriaPeixeItemQtdAmostra = biometriaPeixeItemQtdAmostra;
       this.biometriaPeixeItemNumeroEtapa = biometriaPeixeItemNumeroEtapa;
       this.biometriaPeixeItemDataDeRegistro = biometriaPeixeItemDataDeRegistro;
       this.biometriaPeixeItemAtivo = biometriaPeixeItemAtivo;
       this.biometriaPeixeItemTaxaArracoamento = biometriaPeixeItemTaxaArracoamento;
       this.alimentas = alimentas;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="biometria_Peixe_Item_Codigo", unique=true, nullable=false)
    public Integer getBiometriaPeixeItemCodigo() {
        return this.biometriaPeixeItemCodigo;
    }
    
    public void setBiometriaPeixeItemCodigo(Integer biometriaPeixeItemCodigo) {
        this.biometriaPeixeItemCodigo = biometriaPeixeItemCodigo;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="fk_Bpi_funcionario_Codigo", nullable=false)
    public Funcionario getFuncionario() {
        return this.funcionario;
    }
    
    public void setFuncionario(Funcionario funcionario) {
        this.funcionario = funcionario;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="fk_Bpi_registra_LoteDePeixe_Codigo", nullable=false)
    public RegistraLotedepeixe getRegistraLotedepeixe() {
        return this.registraLotedepeixe;
    }
    
    public void setRegistraLotedepeixe(RegistraLotedepeixe registraLotedepeixe) {
        this.registraLotedepeixe = registraLotedepeixe;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="fk_Bpi_taxa_De_Alimentacao_Codigo", nullable=false)
    public TaxaDeAlimentacao getTaxaDeAlimentacao() {
        return this.taxaDeAlimentacao;
    }
    
    public void setTaxaDeAlimentacao(TaxaDeAlimentacao taxaDeAlimentacao) {
        this.taxaDeAlimentacao = taxaDeAlimentacao;
    }

    
    @Column(name="biometria_Peixe_Item_TotalDeQuilos", nullable=false, precision=10, scale=3)
    public BigDecimal getBiometriaPeixeItemTotalDeQuilos() {
        return this.biometriaPeixeItemTotalDeQuilos;
    }
    
    public void setBiometriaPeixeItemTotalDeQuilos(BigDecimal biometriaPeixeItemTotalDeQuilos) {
        this.biometriaPeixeItemTotalDeQuilos = biometriaPeixeItemTotalDeQuilos;
    }

    
    @Column(name="biometria_Peixe_Item_QtdAmostra", nullable=false, precision=22, scale=0)
    public double getBiometriaPeixeItemQtdAmostra() {
        return this.biometriaPeixeItemQtdAmostra;
    }
    
    public void setBiometriaPeixeItemQtdAmostra(double biometriaPeixeItemQtdAmostra) {
        this.biometriaPeixeItemQtdAmostra = biometriaPeixeItemQtdAmostra;
    }

    
    @Column(name="biometria_Peixe_Item_NumeroEtapa", nullable=false)
    public int getBiometriaPeixeItemNumeroEtapa() {
        return this.biometriaPeixeItemNumeroEtapa;
    }
    
    public void setBiometriaPeixeItemNumeroEtapa(int biometriaPeixeItemNumeroEtapa) {
        this.biometriaPeixeItemNumeroEtapa = biometriaPeixeItemNumeroEtapa;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="biometria_Peixe_Item_DataDeRegistro", nullable=false, length=10)
    public Date getBiometriaPeixeItemDataDeRegistro() {
        return this.biometriaPeixeItemDataDeRegistro;
    }
    
    public void setBiometriaPeixeItemDataDeRegistro(Date biometriaPeixeItemDataDeRegistro) {
        this.biometriaPeixeItemDataDeRegistro = biometriaPeixeItemDataDeRegistro;
    }

    
    @Column(name="biometria_Peixe_Item_Ativo", nullable=false)
    public boolean isBiometriaPeixeItemAtivo() {
        return this.biometriaPeixeItemAtivo;
    }
    
    public void setBiometriaPeixeItemAtivo(boolean biometriaPeixeItemAtivo) {
        this.biometriaPeixeItemAtivo = biometriaPeixeItemAtivo;
    }

    
    @Column(name="biometria_Peixe_Item_TaxaArracoamento", nullable=false, precision=10, scale=3)
    public BigDecimal getBiometriaPeixeItemTaxaArracoamento() {
        return this.biometriaPeixeItemTaxaArracoamento;
    }
    
    public void setBiometriaPeixeItemTaxaArracoamento(BigDecimal biometriaPeixeItemTaxaArracoamento) {
        this.biometriaPeixeItemTaxaArracoamento = biometriaPeixeItemTaxaArracoamento;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="biometriaPeixeItem")
    public Set getAlimentas() {
        return this.alimentas;
    }
    
    public void setAlimentas(Set alimentas) {
        this.alimentas = alimentas;
    }




}


